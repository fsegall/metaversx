import { Abi } from "../abi";
import { TransactionOnNetwork } from "../core/transactionOnNetwork";
import { SmartContractCallOutcome } from "../transactionsOutcomeParsers/resources";
import * as resources from "./resources";
export declare class SmartContractTransactionsOutcomeParser {
    private readonly abi?;
    constructor(options?: {
        abi?: Abi;
    });
    /**
     * Parses the transaction and recovers basic information about the contract(s) deployed by the transaction.
     * @param options
     */
    parseDeploy(options: {
        transactionOnNetwork: TransactionOnNetwork;
    }): resources.SmartContractDeployOutcome;
    protected parseDeployGivenTransactionOnNetwork(transactionOnNetwork: TransactionOnNetwork): resources.SmartContractDeployOutcome;
    private parseScDeployEvent;
    parseExecute(options: {
        transactionOnNetwork: TransactionOnNetwork;
        function?: string;
    }): resources.ParsedSmartContractCallOutcome;
    protected parseExecuteGivenTransactionOnNetwork(transactionOnNetwork: TransactionOnNetwork, functionName?: string): resources.ParsedSmartContractCallOutcome;
    protected findDirectSmartContractCallOutcome(transactionOnNetwork: TransactionOnNetwork): SmartContractCallOutcome;
    protected findDirectSmartContractCallOutcomeWithinSmartContractResults(transactionOnNetwork: TransactionOnNetwork): SmartContractCallOutcome | null;
    protected findDirectSmartContractCallOutcomeIfError(transactionOnNetwork: TransactionOnNetwork): SmartContractCallOutcome | null;
    protected findDirectSmartContractCallOutcomeWithinWriteLogEvents(transactionOnNetwork: TransactionOnNetwork): SmartContractCallOutcome | null;
}
