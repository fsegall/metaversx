import { Address } from "../core/address";
import { TransactionEvent } from "../core/transactionEvents";
import { TransactionLogs } from "../core/transactionLogs";
import { TransactionOnNetwork } from "../core/transactionOnNetwork";
export declare class SmartContractResult {
    raw: Record<string, any>;
    sender: Address;
    receiver: Address;
    data: Uint8Array;
    logs: TransactionLogs;
    constructor(init: Partial<SmartContractResult>);
}
export declare class SmartContractCallOutcome {
    function: string;
    returnDataParts: Uint8Array[];
    returnMessage: string;
    returnCode: string;
    constructor(init: Partial<SmartContractCallOutcome>);
}
export declare function findEventsByPredicate(transactionOutcome: TransactionOnNetwork, predicate: (event: TransactionEvent) => boolean): TransactionEvent[];
export declare function findEventsByIdentifier(transactionOutcome: TransactionOnNetwork, identifier: string): TransactionEvent[];
export declare function findEventsByFirstTopic(transactionOutcome: TransactionOnNetwork, topic: string): TransactionEvent[];
export declare function gatherAllEvents(transactionOutcome: TransactionOnNetwork): TransactionEvent[];
