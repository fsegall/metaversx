"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.gatherAllEvents = exports.findEventsByFirstTopic = exports.findEventsByIdentifier = exports.findEventsByPredicate = exports.SmartContractCallOutcome = exports.SmartContractResult = void 0;
const address_1 = require("../core/address");
const transactionLogs_1 = require("../core/transactionLogs");
class SmartContractResult {
    constructor(init) {
        this.sender = address_1.Address.empty();
        this.receiver = address_1.Address.empty();
        this.data = new Uint8Array();
        this.logs = new transactionLogs_1.TransactionLogs({});
        this.raw = {};
        Object.assign(this, init);
    }
}
exports.SmartContractResult = SmartContractResult;
class SmartContractCallOutcome {
    constructor(init) {
        this.function = "";
        this.returnDataParts = [];
        this.returnMessage = "";
        this.returnCode = "";
        Object.assign(this, init);
    }
}
exports.SmartContractCallOutcome = SmartContractCallOutcome;
function findEventsByPredicate(transactionOutcome, predicate) {
    return gatherAllEvents(transactionOutcome).filter(predicate);
}
exports.findEventsByPredicate = findEventsByPredicate;
function findEventsByIdentifier(transactionOutcome, identifier) {
    return findEventsByPredicate(transactionOutcome, (event) => event.identifier == identifier);
}
exports.findEventsByIdentifier = findEventsByIdentifier;
function findEventsByFirstTopic(transactionOutcome, topic) {
    return findEventsByPredicate(transactionOutcome, (event) => event.topics[0]?.toString() == topic);
}
exports.findEventsByFirstTopic = findEventsByFirstTopic;
function gatherAllEvents(transactionOutcome) {
    const allEvents = [];
    allEvents.push(...transactionOutcome.logs.events);
    for (const item of transactionOutcome.smartContractResults) {
        allEvents.push(...item.logs.events);
    }
    return allEvents;
}
exports.gatherAllEvents = gatherAllEvents;
//# sourceMappingURL=resources.js.map