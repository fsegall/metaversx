"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NetworkConfig = void 0;
/**
 * An object holding Network configuration parameters.
 */
class NetworkConfig {
    constructor() {
        this.raw = {};
        this.chainID = "";
        this.gasPerDataByte = 0n;
        this.genesisTimestamp = 0;
        this.roundDuration = 0;
        this.numRoundsPerEpoch = 0;
        this.minGasLimit = 0n;
        this.minGasPrice = 0n;
        this.extraGasLimitForGuardedTransactions = 0n;
        this.gasPriceModifier = 1;
        this.numShards = 0;
    }
    /**
     * Constructs a configuration object from a HTTP response (as returned by the provider).
     */
    static fromHttpResponse(payload) {
        let networkConfig = new NetworkConfig();
        networkConfig.raw = payload;
        networkConfig.chainID = String(payload["erd_chain_id"]);
        networkConfig.gasPerDataByte = BigInt(payload["erd_gas_per_data_byte"]);
        networkConfig.gasPriceModifier = Number(payload["erd_top_up_factor"]);
        networkConfig.minGasLimit = BigInt(payload["erd_min_gas_limit"]);
        networkConfig.minGasPrice = BigInt(payload["erd_min_gas_price"]);
        networkConfig.extraGasLimitForGuardedTransactions = BigInt(payload["erd_extra_gas_limit_guarded_tx"]);
        networkConfig.numShards = Number(payload["erd_num_shards_without_meta"]);
        networkConfig.roundDuration = Number(payload["erd_round_duration"]);
        networkConfig.numRoundsPerEpoch = Number(payload["erd_rounds_per_epoch"]);
        networkConfig.genesisTimestamp = Number(payload["erd_start_time"]);
        return networkConfig;
    }
}
exports.NetworkConfig = NetworkConfig;
//# sourceMappingURL=networkConfig.js.map