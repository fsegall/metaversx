import{a as R}from"./chunk-NOIVZBOO.js";import{a as k}from"./chunk-MXWWWTCK.js";import{a as y}from"./chunk-2H22XV2Y.js";import{a as F}from"./chunk-6UPV43UI.js";import{a as I}from"./chunk-CKAKHDHE.js";import{a as v}from"./chunk-7APCDRZL.js";import{c as T}from"./chunk-KLQ5IZ6C.js";import{j as S,m as B}from"./chunk-HBP5N4FR.js";B();import{useCallback as D}from"react";var N=s=>{let p=T(),{signedTransactions:i}=v(),a=R(),c=F(),b=k(),n=s==null?void 0:s.onSuccess,o=s==null?void 0:s.onFail;return{verifyBatchStatus:D(Q=>S(void 0,[Q],function*({batchId:r}){var d,f,g,l,h;let t=(f=(d=I(r))==null?void 0:d.toString())!=null?f:"",u=i[t];if(!u||!((g=u.customTransactionInformation)==null?void 0:g.grouping))return;let m=(h=(l=i[t])==null?void 0:l.transactions)!=null?h:[],{isSuccessful:w,isFailed:x,isPending:C}=y({transactions:m});if(!C)w&&(n==null||n(t)),x&&(o==null||o(t,"Error processing batch transactions."));else{let e=yield a({batchId:r});yield c({sessionId:t.toString(),isFailed:e==null?void 0:e.isBatchFailed,shouldRefreshBalance:!0,transactions:m})}}),[p,b,c,i,a,n,o])}};export{N as a};
//# sourceMappingURL=chunk-75HN7K42.js.map
